.flex-container{
    height: 400px;
    background-color: #ddd;
    display: flex;
}

.order1{ order: 1; }
.order2{ order: 2; }
.order3{ order: 3; }
.order4{ order: 4; }
.order5{ order: 5; }

.grow1{ flex-grow: 1; }
.grow2{ flex-grow: 2; }
.grow3{ flex-grow: 3; }
.grow4{ flex-grow: 4; }

.shrink0{ flex-shrink: 0; }
.shrink1{ flex-shrink: 1; }
.shrink2{ flex-shrink: 2; }
.shrink3{ flex-shrink: 3; }

.b-150px{ flex-basis: 150px; }
.b-10p{ flex-basis: 10%; }
.b-25p{ flex-basis: 25%; }
.b-50p{ flex-basis: 50%; }

.flex-1{ flex: 1; }

.start{ align-self: flex-start; }
.end { align-self: flex-end; }
.center { align-self: center; }

/*
order : flex-container내부의 item의 순서를 지정
    속성 값은 정수(양수, 음수, 0)(기본값 : 0)

flex-grow : item이 flex-container내부의 빈 공간을 채우도록 팽창하는 정도를 지정하는 속성
    속성 값은 정수(양수, 음수, 0)(기본값 : 0)
    여러 item에 지정된 경우 각각의 비율에 맞게 팽창함

flex-shrink : flex-container가 줄어들 때, 내부 item이 수축하는 정도를 지정하는 속성
    flexwrap: nowrap;인 경우에만 적용
    속성 값은 정수(양수, 음수, 0)(기본값 : 1)

flex-basis : main-axis방향으로 item의 기본 크기를 지정하는 속성
    각종 크기 단위 사용 가능(%, px, em, rem, vw, vh, vmin, vmax)
    속성 값은 길이값(기본값 : auto)
    flex-basis: 0;이면 flex-grow, flex-shrink 속성이 적용됨
    flex-basis: auto;이면 flex-grow, flex-shrink 속성이 적용되지 않음

flex : flex-grow, flex-shrink, flex-basis를 한 번에 지정하는 속성

align-self : item의 cross-axis방향으로 정렬하는 속성
    속성 값은 align-items와 동일(단 item별로 지정)
    (auto, flex-start, flex-end, center, baseline, stretch)
*/





